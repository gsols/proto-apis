syntax = "proto3";

package queuer.commands.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

import "queuer/entities/v1/consumer.proto";
import "queuer/entities/v1/stream.proto";
import "queuer/entities/v1/message.proto";
import "queuer/entities/v1/command.proto";
import "queuer/entities/v1/stats.proto";
import "queuer/entities/v1/result.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/gsols/goproto/queuer/commands/v1;v1";
option php_namespace = "GSols\\PHPProto\\Queuer\\Commands\\v1";
option php_metadata_namespace = "GSols\\PHPProto\\Queuer\\Commands\\v1\\Metadata";

message SubscribeRequest {}

message SubscribeResponse {
  entities.v1.Command command = 1;
}

message CreateRequest {
  entities.v1.Action action = 1;
  optional bytes payload = 2;
  optional string consumer_id = 3 [(validate.rules).string = {uuid: true, ignore_empty: true}];
  optional string stream_id = 4 [(validate.rules).string = {uuid: true, ignore_empty: true}];
}

message CreateResponse {
  entities.v1.Result result = 1;
  entities.v1.Command command = 2;
}

message GetRequest {
  string command_id = 1 [(validate.rules).string.uuid = true];
}

message GetResponse {
  entities.v1.Command command = 1;
}

message AcknowledgeRequest {
  string command_id = 1 [(validate.rules).string.uuid = true];
  bytes payload = 2;
}

message AcknowledgeResponse {
  entities.v1.Result result = 1;
}