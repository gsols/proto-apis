syntax = "proto3";

package queuer.consumers.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

import "queuer/entities/v1/consumer.proto";
import "queuer/entities/v1/stream.proto";
import "queuer/entities/v1/message.proto";
import "queuer/entities/v1/command.proto";
import "queuer/entities/v1/stats.proto";


import "queuer/consumers/v1/messages.proto";
import "queuer/consumers/v1/presence.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/gsols/goproto/queuer/consumers/v1;v1";
option php_namespace = "GSols\\PHPProto\\Queuer\\Consumers\\v1";
option php_metadata_namespace = "GSols\\PHPProto\\Queuer\\Consumers\\v1\\Metadata";

service PresenceService {
  rpc IAmAlive(IAmAliveRequest) returns (IAmAliveResponse) {
    option (google.api.http) = {
      post: "/v1/presence/live"
      body: "*"
    };
  }
}


service ConsumerService {
  rpc RegisterConsumer(RegisterConsumerRequest) returns (RegisterConsumerResponse) {
    option (google.api.http) = {
      post: "/v1/consumers"
      body: "*"
    };
  }

  rpc GetConsumer(GetConsumerRequest) returns (GetConsumerResponse) {
    option (google.api.http) = {
      get: "/v1/consumers/{consumer_id}"
    };
  }

  rpc GetAuthorizedConsumers(GetAuthorizedConsumersRequest) returns (GetAuthorizedConsumersResponse) {
    option (google.api.http) = {
      get: "/v1/consumers/authorized"
    };
  }

  rpc GetUnauthorizedConsumers(GetUnauthorizedConsumersRequest) returns (GetUnauthorizedConsumersResponse) {
    option (google.api.http) = {
      get: "/v1/consumers/unauthorized"
    };
  }

  rpc AuthorizeConsumer(AuthorizeConsumerRequest) returns (AuthorizeConsumerResponse) {
    option (google.api.http) = {
      post: "/v1/consumers/{consumer_id}/authorize"
      body: "*"
    };
  }

  rpc DeauthorizeConsumer(DeauthorizeConsumerRequest) returns (DeauthorizeConsumerResponse) {
    option (google.api.http) = {
      post: "/v1/consumers/{consumer_id}/deauthorize"
      body: "*"
    };
  }

  rpc RetrieveConsumerCredentials(RetrieveConsumerCredentialsRequest) returns (RetrieveConsumerCredentialsResponse) {
    option (google.api.http) = {
      get: "/v1/consumers/{consumer_id}/credentials"
    };
  }

  rpc PublishConsumerStats(stream PublishConsumerStatsRequest) returns (PublishConsumerStatsResponse) {
    option (google.api.http) = {
      post: "/v1/consumers/stats"
      body: "*"
    };
  }

  rpc GetConsumerStreams(GetConsumerStreamsRequest) returns (GetConsumerStreamsResponse) {
    option (google.api.http) = {
      get: "/v1/consumers/{consumer_id}/streams"
    };
  }

  rpc GetSubscribedStreams(GetSubscribedStreamsRequest) returns (GetSubscribedStreamsResponse) {
    option (google.api.http) = {
      get: "/v1/consumers/{consumer_id}/subscribed"
    };
  }
}


