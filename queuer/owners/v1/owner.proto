syntax = "proto3";

package queuer.owners.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

import "queuer/entities/v1/owner.proto";
import "queuer/entities/v1/stream.proto";

import "queuer/owners/v1/messages.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/gsols/goproto/queuer/owners/v1;v1";
option php_namespace = "GSols\\PHPProto\\Queuer\\Owners\\v1";
option php_metadata_namespace = "GSols\\PHPProto\\Queuer\\Owners\\v1\\Metadata";

service OwnerService {
  rpc CreateOwner(CreateOwnerRequest) returns (CreateOwnerResponse){
    option (google.api.http) = {
      post: "/v1/owners"
      body: "*"
    };
  };

  rpc GetOwner(GetOwnerRequest) returns (GetOwnerResponse){
    option (google.api.http) = {
      get: "/v1/owners/{owner_id}"
    };
  };

  rpc GetOwners(GetOwnersRequest) returns (GetOwnersResponse){
    option (google.api.http) = {
      get: "/v1/owners"
    };
  };

  rpc RegisterConsumer(RegisterConsumerRequest) returns (RegisterConsumerResponse) {
    option (google.api.http) = {
      post: "/v1/owners/{owner_id}/consumers"
      body: "*"
    };
  }

  rpc GetConsumers(GetConsumersRequest) returns (GetConsumersResponse) {
    option (google.api.http) = {
      get: "/v1/owners/{owner_id}/consumers"
    };
  }

  rpc ListStreams(ListStreamsRequest) returns (ListStreamsResponse) {
    option (google.api.http) = {
      get: "/v1/owners/{owner_id}/streams"
    };
  }
}