syntax = "proto3";

package queuer.streams.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

import "queuer/entities/v1/stream.proto";
import "queuer/entities/v1/message.proto";
import "queuer/entities/v1/stats.proto";
import "queuer/entities/v1/client.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/gsols/goproto/queuer/streams/v1;v1";

message CreateStreamRequest {
  string name = 1 [(validate.rules).string.min_len = 3];
  string owner_id = 2 [(validate.rules).string.uuid = true];
}

message CreateStreamResponse {
  entities.v1.Stream stream = 1;
}

message GetStreamRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
}

message GetStreamResponse {
  entities.v1.Stream stream = 1;
}

message FlushStreamRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
}

message FlushStreamResponse {
  bool success = 1;
}

message DeleteStreamRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
}

message DeleteStreamResponse {
  bool success = 1;
}

message PublishMessageRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
  entities.v1.Message message = 2;
}

message PublishMessageResponse {
  string message_id = 1 [(validate.rules).string.uuid = true];
}

message SubscribeRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
}

message SubscribeResponse {
  entities.v1.Message message = 1;
}

message UpdateStateRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
  entities.v1.StreamState state = 2;
}

message UpdateStateResponse {
  bool success = 1;
}

message RegisterClientRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
  string client_id = 2 [(validate.rules).string.uuid = true];
}

message RegisterClientResponse {
  bool success = 1;
}

message GetClientsRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
}

message GetClientsResponse {
  repeated entities.v1.Client clients = 1;
}

message UnregisterClientRequest {
  string stream_id = 1 [(validate.rules).string.uuid = true];
  string client_id = 2 [(validate.rules).string.uuid = true];
}

message UnregisterClientResponse {
  bool success = 1;
}